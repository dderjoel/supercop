.text
.global CRYPTO_NAMESPACE(fiat_secp256k1_dettman_mul)
CRYPTO_NAMESPACE(fiat_secp256k1_dettman_mul):
	mov    %rdx,%rax
	mov    0x20(%rdx),%rdx
	mulx   0x20(%rsi),%r10,%r11
	mov    0x20(%rax),%rdx
	mulx   0x18(%rsi),%rcx,%r8
	mov    0x10(%rax),%rdx
	mov    %rbx,-0x80(%rsp)
	mulx   0x8(%rsi),%r9,%rbx
	mov    0x18(%rax),%rdx
	mov    %rbp,-0x78(%rsp)
	mov    %r12,-0x70(%rsp)
	mulx   0x10(%rsi),%rbp,%r12
	mov    (%rax),%rdx
	mov    %r13,-0x68(%rsp)
	mov    %r14,-0x60(%rsp)
	mulx   0x18(%rsi),%r13,%r14
	mov    0x8(%rsi),%rdx
	mov    %r15,-0x58(%rsp)
	mov    %rdi,-0x50(%rsp)
	mulx   0x18(%rax),%r15,%rdi
	mov    %r10,%rdx
	shrd   $0x34,%r11,%rdx
	mov    %rdx,%r11
	mov    0x10(%rsi),%rdx
	mov    %r8,-0x48(%rsp)
	mov    %rcx,-0x40(%rsp)
	mulx   0x8(%rax),%r8,%rcx
	add    %r8,%r13
	adcx   %r14,%rcx
	movabs $0x1000003d10,%rdx
	mulx   %r11,%r14,%r8
	mov    (%rsi),%rdx
	mov    %r12,-0x38(%rsp)
	mulx   0x18(%rax),%r11,%r12
	test   %al,%al
	adox   %r9,%r13
	adox   %rcx,%rbx
	adcx   %r11,%r13
	adcx   %rbx,%r12
	movabs $0xfffffffffffff,%rdx
	and    %rdx,%r10
	movabs $0x1000003d10,%r9
	mov    %r9,%rdx
	mulx   %r10,%r9,%rcx
	mov    0x8(%rax),%rdx
	mulx   0x18(%rsi),%r11,%rbx
	mov    0x20(%rsi),%rdx
	mov    %rbp,-0x30(%rsp)
	mulx   (%rax),%r10,%rbp
	adox   %r11,%r10
	adox   %rbp,%rbx
	adcx   %r13,%r9
	adcx   %rcx,%r12
	mov    0x10(%rsi),%rdx
	mulx   0x10(%rax),%r13,%rcx
	xor    %rdx,%rdx
	adox   %r13,%r10
	adox   %rbx,%rcx
	adcx   %r15,%r10
	adcx   %rcx,%rdi
	mov    $0x34,%r15d
	bzhi   %r15,%r9,%r11
	mov    0x10(%rax),%rdx
	mulx   0x18(%rsi),%rbp,%rbx
	mov    0x20(%rax),%rdx
	mulx   (%rsi),%r13,%rcx
	adox   %r13,%r10
	adox   %rdi,%rcx
	shrd   $0x34,%r12,%r9
	mov    0x20(%rsi),%rdx
	mulx   0x8(%rax),%r12,%rdi
	add    %rbp,%r12
	adcx   %rdi,%rbx
	xor    %rdx,%rdx
	adox   %r10,%r9
	adox   %rdx,%rcx
	adcx   %r9,%r14
	adcx   %r8,%rcx
	xor    %r8,%r8
	adox   -0x30(%rsp),%r12
	adox   -0x38(%rsp),%rbx
	bzhi   %r15,%r14,%rdx
	mov    %rdx,%rbp
	mov    0x20(%rax),%rdx
	mulx   0x8(%rsi),%r13,%r10
	mov    $0x30,%edx
	bzhi   %rdx,%rbp,%rdi
	mov    0x10(%rax),%rdx
	mulx   0x20(%rsi),%r9,%r8
	adox   %r13,%r12
	adox   %rbx,%r10
	shrd   $0x34,%rcx,%r14
	xor    %rdx,%rdx
	adox   %r12,%r14
	adox   %rdx,%r10
	bzhi   %r15,%r14,%rcx
	shrd   $0x34,%r10,%r14
	mov    0x18(%rsi),%rdx
	mulx   0x18(%rax),%rbx,%r13
	mov    0x20(%rax),%rdx
	mulx   0x10(%rsi),%r12,%r10
	add    %rbx,%r9
	adcx   %r8,%r13
	shl    $0x4,%rcx
	add    %r12,%r9
	adcx   %r13,%r10
	shr    $0x30,%rbp
	lea    (%rcx,%rbp,1),%rcx
	movabs $0x1000003d1,%rdx
	mulx   %rcx,%r8,%rbx
	mov    (%rax),%rdx
	mulx   (%rsi),%r12,%r13
	mov    0x18(%rax),%rdx
	mulx   0x20(%rsi),%rbp,%rcx
	test   %al,%al
	adox   %r12,%r8
	adox   %rbx,%r13
	adcx   -0x40(%rsp),%rbp
	adcx   -0x48(%rsp),%rcx
	mov    (%rsi),%rdx
	mulx   0x8(%rax),%rbx,%r12
	xor    %rdx,%rdx
	adox   %r9,%r14
	adox   %rdx,%r10
	mov    %r8,%r9
	shrd   $0x34,%r13,%r9
	bzhi   %r15,%r14,%r13
	shrd   $0x34,%r10,%r14
	xor    %r10,%r10
	adox   %rbp,%r14
	adox   %r10,%rcx
	mov    0x8(%rsi),%rdx
	mulx   (%rax),%rbp,%r10
	mov    0x8(%rax),%rdx
	mov    %rdi,-0x28(%rsp)
	mulx   0x8(%rsi),%r15,%rdi
	mov    0x10(%rsi),%rdx
	mov    %r11,-0x20(%rsp)
	mov    %rcx,-0x18(%rsp)
	mulx   (%rax),%r11,%rcx
	adcx   %r15,%r11
	adcx   %rcx,%rdi
	test   %al,%al
	adox   %rbx,%rbp
	adox   %r10,%r12
	adcx   %rbp,%r9
	adc    $0x0,%r12
	movabs $0x1000003d10,%rdx
	mulx   %r13,%rbx,%r10
	add    %r9,%rbx
	adcx   %r10,%r12
	mov    0x10(%rax),%rdx
	mulx   (%rsi),%r13,%r15
	mov    $0x34,%edx
	bzhi   %rdx,%rbx,%rcx
	bzhi   %rdx,%r14,%rbp
	movabs $0x1000003d10,%r9
	mov    %rbp,%rdx
	mulx   %r9,%rbp,%r10
	shrd   $0x34,%r12,%rbx
	mov    -0x50(%rsp),%r12
	mov    %rcx,0x8(%r12)
	add    %r13,%r11
	adcx   %rdi,%r15
	xor    %rdi,%rdi
	adox   %r11,%rbx
	adox   %rdi,%r15
	adcx   %rbx,%rbp
	adcx   %r10,%r15
	mov    %rbp,%r13
	shrd   $0x34,%r15,%r13
	add    -0x20(%rsp),%r13
	mov    -0x18(%rsp),%rcx
	shrd   $0x34,%rcx,%r14
	mov    %r9,%rdx
	mulx   %r14,%r9,%rcx
	xor    %r10,%r10
	adox   %r13,%r9
	adox   %r10,%rcx
	movabs $0xfffffffffffff,%rdi
	mov    %r9,%r11
	and    %rdi,%r11
	shrd   $0x34,%rcx,%r9
	add    -0x28(%rsp),%r9
	and    %rdi,%r8
	mov    %r9,0x20(%r12)
	mov    %r8,(%r12)
	and    %rdi,%rbp
	mov    %rbp,0x10(%r12)
	mov    %r11,0x18(%r12)
	mov    -0x80(%rsp),%rbx
	mov    -0x78(%rsp),%rbp
	mov    -0x70(%rsp),%r12
	mov    -0x68(%rsp),%r13
	mov    -0x60(%rsp),%r14
	mov    -0x58(%rsp),%r15
	ret    
