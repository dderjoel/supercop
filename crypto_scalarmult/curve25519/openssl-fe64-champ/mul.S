.text
.global CRYPTO_NAMESPACE(fiat_curve25519_carry_mul)
CRYPTO_NAMESPACE(fiat_curve25519_carry_mul):
	mov    0x10(%rdx),%rax
	lea    (%rax,%rax,8),%r10
	lea    (%rax,%r10,2),%r11
	mov    %rdx,%rax
	mov    0x8(%rsi),%rdx
	mulx   0x18(%rax),%r10,%rcx
	imul   $0x13,0x8(%rax),%rdx
	mulx   0x20(%rsi),%r8,%r9
	mov    0x18(%rax),%rdx
	mov    %rbx,-0x80(%rsp)
	mov    %rbp,-0x78(%rsp)
	lea    (%rdx,%rdx,8),%rbx
	lea    (%rdx,%rbx,2),%rbp
	mov    0x10(%rsi),%rdx
	mov    %r12,-0x70(%rsp)
	mulx   %rbp,%rbx,%r12
	imul   $0x13,0x20(%rax),%rdx
	mov    %r13,-0x68(%rsp)
	mov    %rdx,%r13
	mov    0x10(%rsi),%rdx
	mov    %r14,-0x60(%rsp)
	mov    %r15,-0x58(%rsp)
	mulx   0x8(%rax),%r14,%r15
	mov    %r11,%rdx
	mov    %rdi,-0x50(%rsp)
	mulx   0x18(%rsi),%r11,%rdi
	mov    %rcx,-0x48(%rsp)
	mov    %r10,-0x40(%rsp)
	mulx   0x20(%rsi),%rcx,%r10
	mov    %rbp,%rdx
	mov    %r15,-0x38(%rsp)
	mulx   0x18(%rsi),%rbp,%r15
	test   %al,%al
	adox   %r11,%r8
	adox   %r9,%rdi
	adcx   %rbx,%r8
	adcx   %rdi,%r12
	mov    %rdx,%r9
	mov    (%rax),%rdx
	mulx   0x18(%rsi),%rbx,%r11
	mov    0x20(%rsi),%rdx
	mov    %r14,-0x30(%rsp)
	mulx   %r13,%rdi,%r14
	xor    %rdx,%rdx
	adox   %rbx,%rdi
	adox   %r14,%r11
	adcx   %rbp,%rcx
	adcx   %r10,%r15
	mov    0x8(%rsi),%rdx
	mulx   %r13,%r10,%rbp
	mov    (%rsi),%rdx
	mulx   (%rax),%rbx,%r14
	xor    %rdx,%rdx
	adox   %r10,%r8
	adox   %r12,%rbp
	mov    %r13,%rdx
	mulx   0x10(%rsi),%r13,%r12
	adcx   %rbx,%r8
	adcx   %rbp,%r14
	mov    %rdx,%r10
	mov    0x8(%rsi),%rdx
	mulx   (%rax),%rbx,%rbp
	mov    %r8,%rdx
	shrd   $0x33,%r14,%rdx
	xor    %r14,%r14
	adox   %r13,%rcx
	adox   %r15,%r12
	adcx   %rbx,%rcx
	adcx   %r12,%rbp
	mov    %rdx,%r15
	mov    0x8(%rax),%rdx
	mulx   (%rsi),%r13,%rbx
	xor    %rdx,%rdx
	adox   %r13,%rcx
	adox   %rbp,%rbx
	adcx   %r15,%rcx
	adc    $0x0,%rbx
	mov    %rcx,%r14
	shrd   $0x33,%rbx,%r14
	test   %al,%al
	adox   -0x30(%rsp),%rdi
	adox   -0x38(%rsp),%r11
	mov    0x8(%rsi),%rdx
	mulx   0x8(%rax),%r15,%r12
	mov    %r10,%rdx
	mulx   0x18(%rsi),%r10,%rbp
	mov    0x20(%rsi),%rdx
	mulx   %r9,%r13,%rbx
	mov    0x10(%rsi),%rdx
	mov    %r11,-0x28(%rsp)
	mulx   (%rax),%r9,%r11
	adcx   %r10,%r13
	adcx   %rbx,%rbp
	xor    %rdx,%rdx
	adox   %r9,%r13
	adox   %rbp,%r11
	adcx   %r15,%r13
	adcx   %r11,%r12
	mov    (%rsi),%rdx
	mulx   0x18(%rax),%r15,%r10
	mov    0x10(%rax),%rdx
	mulx   (%rsi),%rbx,%r9
	xor    %rdx,%rdx
	adox   %rbx,%r13
	adox   %r12,%r9
	adcx   %r14,%r13
	adc    $0x0,%r9
	mov    %r13,%r14
	shrd   $0x33,%r9,%r14
	movabs $0x7ffffffffffff,%rbp
	and    %rbp,%rcx
	mov    0x8(%rax),%rdx
	mulx   0x18(%rsi),%r11,%r12
	mov    0x10(%rax),%rdx
	mulx   0x8(%rsi),%rbx,%r9
	adox   %rbx,%rdi
	adox   -0x28(%rsp),%r9
	adcx   %r15,%rdi
	adcx   %r9,%r10
	xor    %rdx,%rdx
	adox   %r14,%rdi
	adox   %rdx,%r10
	mov    0x10(%rsi),%rdx
	mulx   0x10(%rax),%r15,%r14
	mov    0x20(%rsi),%rdx
	mulx   (%rax),%rbx,%r9
	mov    %rdi,%rdx
	shrd   $0x33,%r10,%rdx
	xor    %r10,%r10
	adox   %r11,%rbx
	adox   %r9,%r12
	adcx   %r15,%rbx
	adcx   %r12,%r14
	and    %rbp,%rdi
	adox   -0x40(%rsp),%rbx
	adox   -0x48(%rsp),%r14
	mov    %rdx,%r11
	mov    0x20(%rax),%rdx
	mulx   (%rsi),%r15,%r9
	adcx   %r15,%rbx
	adcx   %r14,%r9
	and    %rbp,%r8
	adox   %r11,%rbx
	adox   %r10,%r9
	mov    %rbx,%rdx
	and    %rbp,%rdx
	shrd   $0x33,%r9,%rbx
	imul   $0x13,%rbx,%r11
	lea    (%r8,%r11,1),%r8
	mov    %r8,%r12
	shr    $0x33,%r12
	lea    (%r12,%rcx,1),%r12
	mov    %r12,%rcx
	shr    $0x33,%rcx
	and    %rbp,%r8
	mov    -0x50(%rsp),%r14
	mov    %rdi,0x18(%r14)
	and    %rbp,%r12
	and    %rbp,%r13
	mov    %r12,0x8(%r14)
	mov    %rdx,0x20(%r14)
	lea    (%rcx,%r13,1),%rcx
	mov    %r8,(%r14)
	mov    %rcx,0x10(%r14)
	mov    -0x80(%rsp),%rbx
	mov    -0x78(%rsp),%rbp
	mov    -0x70(%rsp),%r12
	mov    -0x68(%rsp),%r13
	mov    -0x60(%rsp),%r14
	mov    -0x58(%rsp),%r15
	ret    
