.text
.global CRYPTO_NAMESPACE(fiat_curve25519_carry_mul)
CRYPTO_NAMESPACE(fiat_curve25519_carry_mul):
	mov    0x8(%rdx),%rax
	lea    (%rax,%rax,8),%r10
	lea    (%rax,%r10,2),%r11
	mov    0x20(%rdx),%rax
	lea    (%rax,%rax,8),%r10
	lea    (%rax,%r10,2),%rcx
	mov    %rdx,%rax
	mov    0x10(%rsi),%rdx
	mulx   0x8(%rax),%r10,%r8
	mov    0x10(%rax),%rdx
	mov    %rbx,-0x80(%rsp)
	lea    (%rdx,%rdx,8),%r9
	lea    (%rdx,%r9,2),%rbx
	mov    0x8(%rsi),%rdx
	mov    %r12,-0x78(%rsp)
	mulx   (%rax),%r9,%r12
	mov    0x18(%rsi),%rdx
	mov    %r13,-0x70(%rsp)
	mov    %r14,-0x68(%rsp)
	mulx   %rbx,%r13,%r14
	mov    0x18(%rax),%rdx
	mov    %r15,-0x60(%rsp)
	mov    %rdi,-0x58(%rsp)
	lea    (%rdx,%rdx,8),%r15
	lea    (%rdx,%r15,2),%rdi
	mov    %rcx,%rdx
	mulx   0x8(%rsi),%rcx,%r15
	mov    %r8,-0x50(%rsp)
	mov    %r10,-0x48(%rsp)
	mulx   0x20(%rsi),%r8,%r10
	mov    %r10,-0x40(%rsp)
	mov    %rdx,%r10
	mov    0x18(%rsi),%rdx
	mov    %r8,-0x38(%rsp)
	mov    %r12,-0x30(%rsp)
	mulx   %rdi,%r8,%r12
	mov    0x20(%rsi),%rdx
	mov    %r9,-0x28(%rsp)
	mov    %r15,-0x20(%rsp)
	mulx   %rbx,%r9,%r15
	mov    %r11,%rdx
	mulx   0x20(%rsi),%r11,%rbx
	xor    %rdx,%rdx
	adox   %r13,%r11
	adox   %rbx,%r14
	adcx   %r8,%r9
	adcx   %r15,%r12
	mov    %rdi,%rdx
	mulx   0x10(%rsi),%rdi,%r13
	xor    %r8,%r8
	adox   %rdi,%r11
	adox   %r14,%r13
	adcx   %rcx,%r11
	adcx   -0x20(%rsp),%r13
	mov    %rdx,%rcx
	mov    0x10(%rsi),%rdx
	mulx   %r10,%r15,%rbx
	mov    (%rax),%rdx
	mulx   (%rsi),%r14,%rdi
	xor    %rdx,%rdx
	adox   %r15,%r9
	adox   %r12,%rbx
	adcx   %r14,%r11
	adcx   %r13,%rdi
	mov    $0x33,%r8d
	bzhi   %r8,%r11,%r12
	shrd   $0x33,%rdi,%r11
	mov    0x8(%rax),%rdx
	mulx   (%rsi),%r13,%r15
	xor    %rdx,%rdx
	adox   -0x28(%rsp),%r9
	adox   -0x30(%rsp),%rbx
	adcx   %r13,%r9
	adcx   %rbx,%r15
	mov    %rcx,%rdx
	mulx   0x20(%rsi),%rcx,%r14
	add    %r11,%r9
	adc    $0x0,%r15
	mov    %r9,%rdx
	shrd   $0x33,%r15,%rdx
	mov    %rdx,%rdi
	mov    0x18(%rsi),%rdx
	mulx   %r10,%r11,%r13
	test   %al,%al
	adox   %r11,%rcx
	adox   %r14,%r13
	mov    0x10(%rsi),%rdx
	mulx   (%rax),%r10,%rbx
	adcx   %r10,%rcx
	adcx   %r13,%rbx
	mov    0x8(%rsi),%rdx
	mulx   0x8(%rax),%r14,%r15
	xor    %rdx,%rdx
	adox   %r14,%rcx
	adox   %rbx,%r15
	mov    0x18(%rax),%rdx
	mulx   (%rsi),%r11,%r13
	mov    0x10(%rax),%rdx
	mulx   (%rsi),%r10,%rbx
	adcx   %r10,%rcx
	adcx   %r15,%rbx
	mov    0x18(%rsi),%rdx
	mulx   (%rax),%r14,%r15
	xor    %rdx,%rdx
	adox   %rdi,%rcx
	adox   %rdx,%rbx
	mov    %r14,%rdi
	adcx   -0x38(%rsp),%rdi
	adcx   -0x40(%rsp),%r15
	mov    0x10(%rax),%rdx
	mulx   0x8(%rsi),%r10,%r14
	mov    (%rax),%rdx
	mov    %r12,-0x18(%rsp)
	mulx   0x20(%rsi),%r8,%r12
	xor    %rdx,%rdx
	adox   -0x48(%rsp),%rdi
	adox   -0x50(%rsp),%r15
	adcx   %r10,%rdi
	adcx   %r15,%r14
	xor    %r10,%r10
	adox   %r11,%rdi
	adox   %r14,%r13
	mov    0x8(%rax),%rdx
	mulx   0x18(%rsi),%r11,%r15
	mov    %rcx,%rdx
	shrd   $0x33,%rbx,%rdx
	add    %rdx,%rdi
	adc    $0x0,%r13
	xor    %rbx,%rbx
	adox   %r11,%r8
	adox   %r12,%r15
	movabs $0x7ffffffffffff,%r10
	mov    %rdi,%r12
	and    %r10,%r12
	shrd   $0x33,%r13,%rdi
	mov    0x10(%rax),%rdx
	mulx   0x10(%rsi),%r14,%r11
	xor    %rdx,%rdx
	adox   %r14,%r8
	adox   %r15,%r11
	mov    (%rsi),%rdx
	mulx   0x20(%rax),%rbx,%r13
	mov    0x18(%rax),%rdx
	mulx   0x8(%rsi),%r15,%r14
	adcx   %r15,%r8
	adcx   %r11,%r14
	xor    %rdx,%rdx
	adox   %rbx,%r8
	adox   %r14,%r13
	mov    -0x58(%rsp),%r11
	mov    %r12,0x18(%r11)
	adcx   %rdi,%r8
	adc    $0x0,%r13
	mov    %r8,%r12
	and    %r10,%r12
	shrd   $0x33,%r13,%r8
	imul   $0x13,%r8,%rdi
	mov    %r12,0x20(%r11)
	add    -0x18(%rsp),%rdi
	mov    %rdi,%rbx
	and    %r10,%rbx
	shr    $0x33,%rdi
	and    %r10,%rcx
	and    %r10,%r9
	lea    (%rdi,%r9,1),%rdi
	mov    %rbx,(%r11)
	mov    %rdi,%r15
	and    %r10,%r15
	shr    $0x33,%rdi
	lea    (%rdi,%rcx,1),%rdi
	mov    %r15,0x8(%r11)
	mov    %rdi,0x10(%r11)
	mov    -0x80(%rsp),%rbx
	mov    -0x78(%rsp),%r12
	mov    -0x70(%rsp),%r13
	mov    -0x68(%rsp),%r14
	mov    -0x60(%rsp),%r15
	ret
